{"ast":null,"code":"/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n ~ Copyright 2020 Adobe Systems Incorporated\r\n ~\r\n ~ Licensed under the Apache License, Version 2.0 (the \"License\");\r\n ~ you may not use this file except in compliance with the License.\r\n ~ You may obtain a copy of the License at\r\n ~\r\n ~     http://www.apache.org/licenses/LICENSE-2.0\r\n ~\r\n ~ Unless required by applicable law or agreed to in writing, software\r\n ~ distributed under the License is distributed on an \"AS IS\" BASIS,\r\n ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n ~ See the License for the specific language governing permissions and\r\n ~ limitations under the License.\r\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/import React,{Component}from'react';import{Route}from'react-router-dom';/**\r\n * Helper that facilitate the use of the {@link Route} component\r\n *//**\r\n * Returns a composite component where a {@link Route} component wraps the provided component\r\n *\r\n * @param {React.Component} WrappedComponent    - React component to be wrapped\r\n * @param {string} [extension=html]             - extension used to identify a route amongst the tree of resource URLs\r\n * @returns {CompositeRoute}\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";export const withRoute=(WrappedComponent,extension)=>{return class CompositeRoute extends Component{render(){let routePath=this.props.cqPath;if(!routePath){return/*#__PURE__*/_jsx(WrappedComponent,{...this.props});}extension=extension||'html';// Context path + route path + extension\nreturn/*#__PURE__*/_jsx(Route,{exact:true,path:'(.*)'+routePath+'(.'+extension+')?',render:routeProps=>{return/*#__PURE__*/_jsx(WrappedComponent,{...this.props,...routeProps});}},routePath);}};};","map":{"version":3,"names":["React","Component","Route","jsx","_jsx","withRoute","WrappedComponent","extension","CompositeRoute","render","routePath","props","cqPath","exact","path","routeProps"],"sources":["D:/LatestProject/Project/aemReact/wknd-react/ui.frontend/src/components/RouteHelper/RouteHelper.js"],"sourcesContent":["/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n ~ Copyright 2020 Adobe Systems Incorporated\r\n ~\r\n ~ Licensed under the Apache License, Version 2.0 (the \"License\");\r\n ~ you may not use this file except in compliance with the License.\r\n ~ You may obtain a copy of the License at\r\n ~\r\n ~     http://www.apache.org/licenses/LICENSE-2.0\r\n ~\r\n ~ Unless required by applicable law or agreed to in writing, software\r\n ~ distributed under the License is distributed on an \"AS IS\" BASIS,\r\n ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n ~ See the License for the specific language governing permissions and\r\n ~ limitations under the License.\r\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\n/**\r\n * Helper that facilitate the use of the {@link Route} component\r\n */\r\n\r\n/**\r\n * Returns a composite component where a {@link Route} component wraps the provided component\r\n *\r\n * @param {React.Component} WrappedComponent    - React component to be wrapped\r\n * @param {string} [extension=html]             - extension used to identify a route amongst the tree of resource URLs\r\n * @returns {CompositeRoute}\r\n */\r\nexport const withRoute = (WrappedComponent, extension) => {\r\n  return class CompositeRoute extends Component {\r\n    render() {\r\n      let routePath = this.props.cqPath;\r\n      if (!routePath) {\r\n        return <WrappedComponent {...this.props} />;\r\n      }\r\n\r\n      extension = extension || 'html';\r\n\r\n      // Context path + route path + extension\r\n      return (\r\n        <Route\r\n          key={routePath}\r\n          exact\r\n          path={'(.*)' + routePath + '(.' + extension + ')?'}\r\n          render={routeProps => {\r\n            return <WrappedComponent {...this.props} {...routeProps} />;\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAEA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,KAAK,KAAQ,kBAAkB,CAExC;AACA;AACA,GAEA;AACA;AACA;AACA;AACA;AACA;AACA,GANA,OAAAC,GAAA,IAAAC,IAAA,yBAOA,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAACC,gBAAgB,CAAEC,SAAS,GAAK,CACxD,MAAO,MAAM,CAAAC,cAAc,QAAS,CAAAP,SAAU,CAC5CQ,MAAMA,CAAA,CAAG,CACP,GAAI,CAAAC,SAAS,CAAG,IAAI,CAACC,KAAK,CAACC,MAAM,CACjC,GAAI,CAACF,SAAS,CAAE,CACd,mBAAON,IAAA,CAACE,gBAAgB,KAAK,IAAI,CAACK,KAAK,CAAG,CAAC,CAC7C,CAEAJ,SAAS,CAAGA,SAAS,EAAI,MAAM,CAE/B;AACA,mBACEH,IAAA,CAACF,KAAK,EAEJW,KAAK,MACLC,IAAI,CAAE,MAAM,CAAGJ,SAAS,CAAG,IAAI,CAAGH,SAAS,CAAG,IAAK,CACnDE,MAAM,CAAEM,UAAU,EAAI,CACpB,mBAAOX,IAAA,CAACE,gBAAgB,KAAK,IAAI,CAACK,KAAK,IAAMI,UAAU,CAAG,CAAC,CAC7D,CAAE,EALGL,SAMN,CAAC,CAEN,CACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}