{"ast":null,"code":"import Tokenizer, { QuoteType } from \"./Tokenizer.js\";\nimport { fromCodePoint } from \"entities/lib/decode.js\";\nconst formTags = new Set([\"input\", \"option\", \"optgroup\", \"select\", \"button\", \"datalist\", \"textarea\"]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([[\"tr\", new Set([\"tr\", \"th\", \"td\"])], [\"th\", new Set([\"th\"])], [\"td\", new Set([\"thead\", \"th\", \"td\"])], [\"body\", new Set([\"head\", \"link\", \"script\"])], [\"li\", new Set([\"li\"])], [\"p\", pTag], [\"h1\", pTag], [\"h2\", pTag], [\"h3\", pTag], [\"h4\", pTag], [\"h5\", pTag], [\"h6\", pTag], [\"select\", formTags], [\"input\", formTags], [\"output\", formTags], [\"button\", formTags], [\"datalist\", formTags], [\"textarea\", formTags], [\"option\", new Set([\"option\"])], [\"optgroup\", new Set([\"optgroup\", \"option\"])], [\"dd\", ddtTags], [\"dt\", ddtTags], [\"address\", pTag], [\"article\", pTag], [\"aside\", pTag], [\"blockquote\", pTag], [\"details\", pTag], [\"div\", pTag], [\"dl\", pTag], [\"fieldset\", pTag], [\"figcaption\", pTag], [\"figure\", pTag], [\"footer\", pTag], [\"form\", pTag], [\"header\", pTag], [\"hr\", pTag], [\"main\", pTag], [\"nav\", pTag], [\"ol\", pTag], [\"pre\", pTag], [\"section\", pTag], [\"table\", pTag], [\"ul\", pTag], [\"rt\", rtpTags], [\"rp\", rtpTags], [\"tbody\", tableSectionTags], [\"tfoot\", tableSectionTags]]);\nconst voidElements = new Set([\"area\", \"base\", \"basefont\", \"br\", \"col\", \"command\", \"embed\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"keygen\", \"link\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\"mi\", \"mo\", \"mn\", \"ms\", \"mtext\", \"annotation-xml\", \"foreignobject\", \"desc\", \"title\"]);\nconst reNameEnd = /\\s|\\//;\nexport class Parser {\n  constructor(cbs, options = {}) {\n    var _a, _b, _c, _d, _e;\n    this.options = options;\n    /** The start index of the last event. */\n    this.startIndex = 0;\n    /** The end index of the last event. */\n    this.endIndex = 0;\n    /**\n     * Store the start index of the current open tag,\n     * so we can update the start index for attributes.\n     */\n    this.openTagStart = 0;\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribvalue = \"\";\n    this.attribs = null;\n    this.stack = [];\n    this.foreignContext = [];\n    this.buffers = [];\n    this.bufferOffset = 0;\n    /** The index of the last written buffer. Used when resuming after a `pause()`. */\n    this.writeIndex = 0;\n    /** Indicates whether the parser has finished running / `.end` has been called. */\n    this.ended = false;\n    this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n    this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : !options.xmlMode;\n    this.lowerCaseAttributeNames = (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : !options.xmlMode;\n    this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : Tokenizer)(this.options, this);\n    (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 ? void 0 : _e.call(_d, this);\n  }\n  // Tokenizer event handlers\n  /** @internal */\n  ontext(start, endIndex) {\n    var _a, _b;\n    const data = this.getSlice(start, endIndex);\n    this.endIndex = endIndex - 1;\n    (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n    this.startIndex = endIndex;\n  }\n  /** @internal */\n  ontextentity(cp) {\n    var _a, _b;\n    /*\n     * Entities can be emitted on the character, or directly after.\n     * We use the section start here to get accurate indices.\n     */\n    const index = this.tokenizer.getSectionStart();\n    this.endIndex = index - 1;\n    (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n    this.startIndex = index;\n  }\n  isVoidElement(name) {\n    return !this.options.xmlMode && voidElements.has(name);\n  }\n  /** @internal */\n  onopentagname(start, endIndex) {\n    this.endIndex = endIndex;\n    let name = this.getSlice(start, endIndex);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    this.emitOpenTag(name);\n  }\n  emitOpenTag(name) {\n    var _a, _b, _c, _d;\n    this.openTagStart = this.startIndex;\n    this.tagname = name;\n    const impliesClose = !this.options.xmlMode && openImpliesClose.get(name);\n    if (impliesClose) {\n      while (this.stack.length > 0 && impliesClose.has(this.stack[this.stack.length - 1])) {\n        const element = this.stack.pop();\n        (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n      }\n    }\n    if (!this.isVoidElement(name)) {\n      this.stack.push(name);\n      if (foreignContextElements.has(name)) {\n        this.foreignContext.push(true);\n      } else if (htmlIntegrationElements.has(name)) {\n        this.foreignContext.push(false);\n      }\n    }\n    (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n    if (this.cbs.onopentag) this.attribs = {};\n  }\n  endOpenTag(isImplied) {\n    var _a, _b;\n    this.startIndex = this.openTagStart;\n    if (this.attribs) {\n      (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n      this.attribs = null;\n    }\n    if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n      this.cbs.onclosetag(this.tagname, true);\n    }\n    this.tagname = \"\";\n  }\n  /** @internal */\n  onopentagend(endIndex) {\n    this.endIndex = endIndex;\n    this.endOpenTag(false);\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onclosetag(start, endIndex) {\n    var _a, _b, _c, _d, _e, _f;\n    this.endIndex = endIndex;\n    let name = this.getSlice(start, endIndex);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    if (foreignContextElements.has(name) || htmlIntegrationElements.has(name)) {\n      this.foreignContext.pop();\n    }\n    if (!this.isVoidElement(name)) {\n      const pos = this.stack.lastIndexOf(name);\n      if (pos !== -1) {\n        if (this.cbs.onclosetag) {\n          let count = this.stack.length - pos;\n          while (count--) {\n            // We know the stack has sufficient elements.\n            this.cbs.onclosetag(this.stack.pop(), count !== 0);\n          }\n        } else this.stack.length = pos;\n      } else if (!this.options.xmlMode && name === \"p\") {\n        // Implicit open before close\n        this.emitOpenTag(\"p\");\n        this.closeCurrentTag(true);\n      }\n    } else if (!this.options.xmlMode && name === \"br\") {\n      // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n      (_b = (_a = this.cbs).onopentagname) === null || _b === void 0 ? void 0 : _b.call(_a, \"br\");\n      (_d = (_c = this.cbs).onopentag) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\", {}, true);\n      (_f = (_e = this.cbs).onclosetag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", false);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onselfclosingtag(endIndex) {\n    this.endIndex = endIndex;\n    if (this.options.xmlMode || this.options.recognizeSelfClosing || this.foreignContext[this.foreignContext.length - 1]) {\n      this.closeCurrentTag(false);\n      // Set `startIndex` for next node\n      this.startIndex = endIndex + 1;\n    } else {\n      // Ignore the fact that the tag is self-closing.\n      this.onopentagend(endIndex);\n    }\n  }\n  closeCurrentTag(isOpenImplied) {\n    var _a, _b;\n    const name = this.tagname;\n    this.endOpenTag(isOpenImplied);\n    // Self-closing tags will be on the top of the stack\n    if (this.stack[this.stack.length - 1] === name) {\n      // If the opening tag isn't implied, the closing tag has to be implied.\n      (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n      this.stack.pop();\n    }\n  }\n  /** @internal */\n  onattribname(start, endIndex) {\n    this.startIndex = start;\n    const name = this.getSlice(start, endIndex);\n    this.attribname = this.lowerCaseAttributeNames ? name.toLowerCase() : name;\n  }\n  /** @internal */\n  onattribdata(start, endIndex) {\n    this.attribvalue += this.getSlice(start, endIndex);\n  }\n  /** @internal */\n  onattribentity(cp) {\n    this.attribvalue += fromCodePoint(cp);\n  }\n  /** @internal */\n  onattribend(quote, endIndex) {\n    var _a, _b;\n    this.endIndex = endIndex;\n    (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double ? '\"' : quote === QuoteType.Single ? \"'\" : quote === QuoteType.NoValue ? undefined : null);\n    if (this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n      this.attribs[this.attribname] = this.attribvalue;\n    }\n    this.attribvalue = \"\";\n  }\n  getInstructionName(value) {\n    const index = value.search(reNameEnd);\n    let name = index < 0 ? value : value.substr(0, index);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    return name;\n  }\n  /** @internal */\n  ondeclaration(start, endIndex) {\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex);\n    if (this.cbs.onprocessinginstruction) {\n      const name = this.getInstructionName(value);\n      this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onprocessinginstruction(start, endIndex) {\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex);\n    if (this.cbs.onprocessinginstruction) {\n      const name = this.getInstructionName(value);\n      this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  oncomment(start, endIndex, offset) {\n    var _a, _b, _c, _d;\n    this.endIndex = endIndex;\n    (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n    (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  oncdata(start, endIndex, offset) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex - offset);\n    if (this.options.xmlMode || this.options.recognizeCDATA) {\n      (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n      (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n      (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n    } else {\n      (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n      (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onend() {\n    var _a, _b;\n    if (this.cbs.onclosetag) {\n      // Set the end index for all remaining tags\n      this.endIndex = this.startIndex;\n      for (let index = this.stack.length; index > 0; this.cbs.onclosetag(this.stack[--index], true));\n    }\n    (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n  }\n  /**\n   * Resets the parser to a blank state, ready to parse a new HTML document\n   */\n  reset() {\n    var _a, _b, _c, _d;\n    (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n    this.tokenizer.reset();\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribs = null;\n    this.stack.length = 0;\n    this.startIndex = 0;\n    this.endIndex = 0;\n    (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n    this.buffers.length = 0;\n    this.bufferOffset = 0;\n    this.writeIndex = 0;\n    this.ended = false;\n  }\n  /**\n   * Resets the parser, then parses a complete document and\n   * pushes it to the handler.\n   *\n   * @param data Document to parse.\n   */\n  parseComplete(data) {\n    this.reset();\n    this.end(data);\n  }\n  getSlice(start, end) {\n    while (start - this.bufferOffset >= this.buffers[0].length) {\n      this.shiftBuffer();\n    }\n    let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n    while (end - this.bufferOffset > this.buffers[0].length) {\n      this.shiftBuffer();\n      slice += this.buffers[0].slice(0, end - this.bufferOffset);\n    }\n    return slice;\n  }\n  shiftBuffer() {\n    this.bufferOffset += this.buffers[0].length;\n    this.writeIndex--;\n    this.buffers.shift();\n  }\n  /**\n   * Parses a chunk of data and calls the corresponding callbacks.\n   *\n   * @param chunk Chunk to parse.\n   */\n  write(chunk) {\n    var _a, _b;\n    if (this.ended) {\n      (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n      return;\n    }\n    this.buffers.push(chunk);\n    if (this.tokenizer.running) {\n      this.tokenizer.write(chunk);\n      this.writeIndex++;\n    }\n  }\n  /**\n   * Parses the end of the buffer and clears the stack, calls onend.\n   *\n   * @param chunk Optional final chunk to parse.\n   */\n  end(chunk) {\n    var _a, _b;\n    if (this.ended) {\n      (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n      return;\n    }\n    if (chunk) this.write(chunk);\n    this.ended = true;\n    this.tokenizer.end();\n  }\n  /**\n   * Pauses parsing. The parser won't emit events until `resume` is called.\n   */\n  pause() {\n    this.tokenizer.pause();\n  }\n  /**\n   * Resumes parsing after `pause` was called.\n   */\n  resume() {\n    this.tokenizer.resume();\n    while (this.tokenizer.running && this.writeIndex < this.buffers.length) {\n      this.tokenizer.write(this.buffers[this.writeIndex++]);\n    }\n    if (this.ended) this.tokenizer.end();\n  }\n  /**\n   * Alias of `write`, for backwards compatibility.\n   *\n   * @param chunk Chunk to parse.\n   * @deprecated\n   */\n  parseChunk(chunk) {\n    this.write(chunk);\n  }\n  /**\n   * Alias of `end`, for backwards compatibility.\n   *\n   * @param chunk Optional final chunk to parse.\n   * @deprecated\n   */\n  done(chunk) {\n    this.end(chunk);\n  }\n}","map":{"version":3,"names":["Tokenizer","QuoteType","fromCodePoint","formTags","Set","pTag","tableSectionTags","ddtTags","rtpTags","openImpliesClose","Map","voidElements","foreignContextElements","htmlIntegrationElements","reNameEnd","Parser","constructor","cbs","options","startIndex","endIndex","openTagStart","tagname","attribname","attribvalue","attribs","stack","foreignContext","buffers","bufferOffset","writeIndex","ended","lowerCaseTagNames","_a","lowerCaseTags","xmlMode","lowerCaseAttributeNames","_b","tokenizer","_c","_e","_d","onparserinit","call","ontext","start","data","getSlice","ontextentity","cp","index","getSectionStart","isVoidElement","name","has","onopentagname","toLowerCase","emitOpenTag","impliesClose","get","length","element","pop","onclosetag","push","onopentag","endOpenTag","isImplied","onopentagend","pos","lastIndexOf","count","closeCurrentTag","_f","onselfclosingtag","recognizeSelfClosing","isOpenImplied","onattribname","onattribdata","onattribentity","onattribend","quote","onattribute","Double","Single","NoValue","undefined","Object","prototype","hasOwnProperty","getInstructionName","value","search","substr","ondeclaration","onprocessinginstruction","oncomment","offset","oncommentend","oncdata","recognizeCDATA","oncdatastart","oncdataend","_h","_g","_k","_j","onend","reset","onreset","parseComplete","end","shiftBuffer","slice","shift","write","chunk","onerror","Error","running","pause","resume","parseChunk","done"],"sources":["https://raw.githubusercontent.com/fb55/htmlparser2/c123610e003a1eaebc61febed01cabb6e41eb658/src/Parser.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}